# Control files for the warnings and tests-warnings Ant targets
#
# "warnings-check" does the absolutely required checks;
# "warnings" adds some extra checks we're trying to drive out of existance.
# "warnings-tests-check" and "warnings-tests" are similar for the tests/ directory
#
# warnings-check:               java/ecj.warning.options-ci
# warnings adds                 java/ecj.warning.options
# tests-warnings-check adds:    java/ecj.warning.options-test-ci
# tests-warnings adds:          java/ecj.warning.options-test
#
#
# For more information, see
#   https://www.ibm.com/docs/en/wdfrhcw/1.4.0?topic=code-using-batch-compiler
#   https://help.eclipse.org/latest/index.jsp?topic=%2Forg.eclipse.jdt.doc.user%2Ftasks%2Ftask-using_batch_compiler.htm&anchor=warn
#   http://help.eclipse.org/galileo/index.jsp?topic=/org.eclipse.jdt.doc.isv/guide/jdt_api_compile.htm
#

#
# Case counts here are as of 12/15/2021
#


#
# Checks we plan to eventually put in place, but would be burdensome now
#

  # 211 cases; the common "if (debugFlag)" metaphor is flagged by these
-err:-allDeadCode
-err:+deadCode

  # missing synch in synchronized method override
  # 24 outstanding items
-err:-syncOverride

  # 1270 "Empty block should be documented"
-err:-emptyBlock

  # 291 cases of "Potential Resource Leak: '<unassigned Closeable value>' may not be closed"
-err:-resource



  # this tags some NetBeans and FindBugs tokens in @SuppressWarnings
  # Until that's fixed, useful to run occasionally to find "Unnecessary" annotations
-warn:-warningToken
  # occasionally turn off @SuppressWarnings to see if there are occurrences to fix
  #   Currently 370 cases
-err:+suppress



