diff --git a/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java b/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java
index 226d8f0a1d..a4e1798c1a 100644
--- a/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java
+++ b/java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java
@@ -5039,8 +5039,8 @@ public class LayoutEditor extends PanelEditor implements MouseWheelListener {
     }
 
     /**
-     * Validates that a physical turnout exists and is unique among Layout
-     * Turnouts Returns true if valid turnout was entered, false otherwise
+     * Validates that a physical turnout exists.
+     * Returns true if valid turnout was entered, false otherwise
      *
      * @param inTurnoutName the (system or user) name of the turnout
      * @param inOpenPane    the pane over which to show dialogs (null to
@@ -5070,95 +5070,7 @@ public class LayoutEditor extends PanelEditor implements MouseWheelListener {
         }
 
         log.debug("validatePhysicalTurnout('{}')", inTurnoutName);
-        boolean result = true;  // assume success (optimist!)
-
-        //ensure that this turnout is unique among Layout Turnouts in this Layout
-        for (LayoutTurnout lt : getLayoutTurnouts()) {
-            t = lt.getTurnout();
-            if (t != null) {
-                String sname = t.getSystemName();
-                String uname = t.getUserName();
-                log.debug("{}: Turnout tested '{}' and '{}'.", lt.getName(), sname, uname);
-                if ((sname.equals(inTurnoutName))
-                        || ((uname != null) && (uname.equals(inTurnoutName)))) {
-                    result = false;
-                    break;
-                }
-            }
-
-            // Only check for the second turnout if the type is a double cross over
-            // otherwise the second turnout is used to throw an additional turnout at
-            // the same time.
-            if (lt.isTurnoutTypeXover()) {
-                t = lt.getSecondTurnout();
-                if (t != null) {
-                    String sname = t.getSystemName();
-                    String uname = t.getUserName();
-                    log.debug("{}: 2nd Turnout tested '{}' and '{}'.", lt.getName(), sname, uname);
-                    if ((sname.equals(inTurnoutName))
-                            || ((uname != null) && (uname.equals(inTurnoutName)))) {
-                        result = false;
-                        break;
-                    }
-                }
-            }
-        }
-
-        if (result) {   // only need to test slips if we haven't failed yet...
-            //ensure that this turnout is unique among Layout slips in this Layout
-            for (LayoutSlip sl : getLayoutSlips()) {
-                t = sl.getTurnout();
-                if (t != null) {
-                    String sname = t.getSystemName();
-                    String uname = t.getUserName();
-                    log.debug("{}: slip Turnout tested '{}' and '{}'.", sl.getName(), sname, uname);
-                    if ((sname.equals(inTurnoutName))
-                            || ((uname != null) && (uname.equals(inTurnoutName)))) {
-                        result = false;
-                        break;
-                    }
-                }
-
-                t = sl.getTurnoutB();
-                if (t != null) {
-                    String sname = t.getSystemName();
-                    String uname = t.getUserName();
-                    log.debug("{}: slip Turnout B tested '{}' and '{}'.", sl.getName(), sname, uname);
-                    if ((sname.equals(inTurnoutName))
-                            || ((uname != null) && (uname.equals(inTurnoutName)))) {
-                        result = false;
-                        break;
-                    }
-                }
-            }
-        }
-
-        if (result) {   // only need to test Turntable turnouts if we haven't failed yet...
-            //ensure that this turntable turnout is unique among turnouts in this Layout
-            for (LayoutTurntable tt : getLayoutTurntables()) {
-                for (LayoutTurntable.RayTrack ray : tt.getRayList()) {
-                    t = ray.getTurnout();
-                    if (t != null) {
-                        String sname = t.getSystemName();
-                        String uname = t.getUserName();
-                        log.debug("{}: Turntable turnout tested '{}' and '{}'.", ray.getTurnoutName(), sname, uname);
-                        if ((sname.equals(inTurnoutName))
-                                || ((uname != null) && (uname.equals(inTurnoutName)))) {
-                            result = false;
-                            break;
-                        }
-                    }
-                }
-            }
-        }
-
-        if (!result && (inOpenPane != null)) {
-            JOptionPane.showMessageDialog(inOpenPane,
-                    MessageFormat.format(Bundle.getMessage("Error4"),
-                            new Object[]{inTurnoutName}),
-                    Bundle.getMessage("ErrorTitle"), JOptionPane.ERROR_MESSAGE);
-        }
-        return result;
+        return true;
     }
 
     /**
