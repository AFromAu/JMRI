# jmri.jmrit.newlogix.digitalaction.DigitalActionBundle.properties
#
# Default properties for the jmri.jmrit.newlogix.digitalaction.DigitalActionBundle

BeanNotSelected         = ''

ActionAtomicBoolean_Short   = Set the atomic boolean
ActionAtomicBoolean_Long    = Set the atomic boolean to {0}

ActionListenOnBeans_Short   = Listen on beans
ActionListenOnBeans_Long    = Listen on beans

CallModule_Short        = Call module
CallModule_Long         = Call module
CallModule_ModuleInUseModuleDigitalActionExpressionVeto  = Module is in use by CallModule action "{0}"

DoAnalogAction_Short    = Read analog and set analog
DoAnalogAction_Long     = Read analog {0} and set analog {1}

DoStringAction_Short    = Read string and set string
DoStringAction_Long     = Read string {0} and set string {1}

IfThenElse_Short        = If then else
IfThenElse_Long         = If {0} then {1} else {2}

HoldAnything_Short      = Hold anything
HoldAnything_Long       = Hold anything

Many_Short              = Many
Many_Long               = Many

Light_Short             = Set light
Light_Long              = Set light {0} to {1}
LightToggleStatus       = Toggle
Light_LightInUseLightExpressionVeto = Light is in use by Light expression "{0}"

Logix_Short             = Logix
Logix_Long              = Logix
Logix_LogixInUseLogixExpressionVeto = Logix is in use by Logix expression "{0}"

LocalVariable_Short             = Set variable
LocalVariable_Long_Null         = Set variable {0} to null
LocalVariable_Long_Value        = Set variable {0} to "{1}"
LocalVariable_Long_CopyVariableToVariable   = Copy variable {0} to variable {1}
LocalVariable_Long_CopyMemoryToVariable     = Copy memory {0} to variable {1}
LocalVariable_Long_Formula      = Set variable {0} to the result of formula "{1}"
LocalVariable_MemoryInUseLocalVariableExpressionVeto  = Memory is in use by LocalVariable action "{0}"

Memory_Short            = Set memory
Memory_Long_Null        = Set memory {0} to null
Memory_Long_Value       = Set memory {0} to "{1}"
Memory_Long_CopyVariableToMemory    = Copy variable {0} to memory {1}
Memory_Long_CopyMemoryToMemory      = Copy memory {0} to memory {1}
Memory_Long_Formula     = Set memory {0} to the result of formula "{1}"
Memory_MemoryInUseMemoryExpressionVeto  = Memory is in use by Memory action "{0}"

PopStack_Short            = Pop from stack
PopStack_Long_Memory      = Pop from stack to memory {1}
PopStack_MemoryInUsePushStackExpressionVeto  = Memory is in use by PopStack action "{0}"

PushStack_Short            = Push to stack
PushStack_Long_String      = Push string "{0}" to stack
PushStack_Long_Memory      = Push memory {0} to stack
PushStack_Long_Formula     = Push the result of formula "{0}" to stack
PushStack_MemoryInUsePushStackExpressionVeto  = Memory is in use by PushStack action "{0}"

Script_Short            = Execute script
Script_Long             = Execute script

Sensor_Short            = Set sensor
Sensor_Long             = Set sensor {0} to {1}
SensorToggleStatus      = Toggle
Sensor_SensorInUseSensorExpressionVeto  = Sensor is in use by Sensor expression "{0}"

ShutdownComputer_Short  = Shutdown computer
ShutdownComputer_Long   = Shutdown computer

Timer_Short             = Execute after delay
Timer_Long              = Execute {0} after {1} milliseconds

Turnout_Short           = Set turnout
Turnout_Long            = Set turnout {0} to {1}
TurnoutToggleStatus     = Toggle
Turnout_TurnoutInUseTurnoutExpressionVeto   = Turnout is in use by Turnout action "{0}"

Throttle_Short          = Throttle
Throttle_Long           = Throttle
