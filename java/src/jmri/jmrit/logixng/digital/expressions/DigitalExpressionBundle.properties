# jmri.jmrit.newlogix.digitalexpressions.DigitalExpressionBundle.properties
#
# Default properties for the jmri.jmrit.newlogix.digitalexpressions.DigitalExpressionBundle

BeanNotSelected       = ''

And_Short             = And
And_Long              = And

Antecedent_Short      = Antecedent
Antecedent_Long       = Antecedent: {0}
Antecedent_Long_Empty = Antecedent: empty

BufferedSensor_Short  = Get buffered sensor
BufferedSensor_Long   = Buffered sensor

Clock_Short             = Clock
Clock_Short_FastClock   = Fast clock
Clock_Short_SystemClock = System clock
Clock_Long_FastClock    = Fast clock {0} between {1} and {2}
Clock_Long_SystemClock  = System clock {0} between {1} and {2}
ClockTypeSystemClock    = System clock
ClockTypeFastClock      = Fast clock

Conditional_Short       = Conditional
Conditional_Long        = Conditional {0} {1} {2}
ConditionalStateFalse   = False
ConditionalStateTrue    = True
ConditionalOtherStatus  = Other
Conditional_ConditionalInUseConditionalExpressionVeto   = Conditional is in use by Conditional expression "{0}"

EntryExit_Short         = Entry/exit
EntryExit_Long          = Entry/exit
EntryExitStateInactive  = Inactive
EntryExitStateActive    = Active
EntryExitOtherStatus    = Other
EntryExit_DestinationPointsInUseEntryExitExpressionVeto = DestinationPoints is in use by EntryExit expression "{0}"

False_Short           = Always false
False_Long            = Always false

Formula_Short         = Formula
Formula_Long          = Formula: {0}
Formula_Long_Empty    = Formula: empty

Hold_Short            = Hold
Hold_Long             = Hold while {0}. Trigger on {1}

Light_Short           = Get light
Light_Long            = Light {0} {1} {2}
LightOtherStatus      = Other
Light_LightInUseLightExpressionVeto = Light is in use by Light expression "{0}"

Memory_Short          = Compare memory
Memory_Long_CompareNull         = Memory {0} {1}
Memory_Long_CompareConstant     = Memory {0} {1} "{2}"
Memory_Long_CompareMemory       = Memory {0} {1} memory {2}
Memory_Long_CompareRegex        = Memory {0} {1} /{2}/
MemoryOperation_LessThan            = is less than
MemoryOperation_LessThanOrEqual     = is less than or equal
MemoryOperation_Equal               = is equal to
MemoryOperation_GreaterThanOrEqual  = is greater than or equal to
MemoryOperation_GreaterThan         = is greater than
MemoryOperation_NotEqual            = is not equal to
MemoryOperation_IsNull              = is null
MemoryOperation_IsNotNull           = is not null
MemoryOperation_MatchRegEx          = does match regular expression
MemoryOperation_NotMatchRegEx       = does not match regular expression
Memory_MemoryInUseMemoryExpressionVeto  = Memory is in use by Memory expression "{0}"

OBlock_Short            = OBlock
OBlock_Long             = OBlock {0} {1} {2}
OBlock_OBlockInUseOBlockExpressionVeto  = OBlock is in use by OBlock expression "{0}"

Or_Short              = Or
Or_Long               = Or

Reference_Short             = Reference
Reference_Long              = Reference {0} {1} {2}
ReferenceNotSelected        = ''
ReferencePointsTo_Nothing   = Nothing
ReferencePointsTo_Table     = Table
ReferencePointsTo_Audio     = Audio
ReferencePointsTo_Light     = Light
ReferencePointsTo_Memory    = Memory
ReferencePointsTo_Sensor    = Sensor
ReferencePointsTo_SignalHead    = SignalHead
ReferencePointsTo_SignalMast    = SignalMast
ReferencePointsTo_Turnout   = Turnout

ResetOnTrue_Short     = Reset on true
ResetOnTrue_Long      = Reset on true

Script_Short          = Evaluate script
Script_Long           = Evaluate script

Sensor_Short          = Get sensor
Sensor_Long           = Sensor {0} {1} {2}
SensorOtherStatus     = Other
Sensor_SensorInUseSensorExpressionVeto   = Sensor is in use by Sensor expression "{0}"

SignalHead_Short      = Signal head
SignalHead_Long       = Signal head {0} {1} {2}
SignalHeadQueryType_Appearance      = Appearence
SignalHeadQueryType_NotAppearance   = Not appearence
SignalHeadQueryType_Lit             = Lit
SignalHeadQueryType_NotLit          = Not lit
SignalHeadQueryType_Held            = Held
SignalHeadQueryType_NotHeld         = Not held
SignalHead_SignalHeadInUseSignalHeadExpressionVeto   = SignalHead is in use by SignalHead expression "{0}"

SignalMast_Short      = Signal mast
SignalMast_Long       = Signal mast {0} {1} {2}
SignalMastQueryType_Aspect      = Appearence
SignalMastQueryType_NotAspect   = Not appearence
SignalMastQueryType_Lit         = Lit
SignalMastQueryType_NotLit      = Not lit
SignalMastQueryType_Held        = Held
SignalMastQueryType_NotHeld     = Not held
SignalMast_SignalMastInUseSignalMastExpressionVeto   = SignalMast is in use by SignalMast expression "{0}"

Timer_Short           = Timer
Timer_Long_WaitOnceTrigOnce     = One shot timer: Wait {0} milliseconds and trigger once.
Timer_Long_WaitOnceTrigUntilReset   = One shot timer: Wait {0} milliseconds. Restart timer when reset.
Timer_Long_RepeatSingleDelay    = Continuous timer: Wait {0} milliseconds and trigger once.
Timer_Long_RepeatDoubleDelay    = Continuous timer: Wait {0} milliseconds and then trigger. Stay on for {1} milliseconds.

TimerType_WaitOnceTrigOnce      = One shot timer: Wait some time and trigger once
TimerType_WaitOnceTrigUntilReset    =   One shot timer: Wait some time and trigger until reset. Restart timer when reset
TimerType_RepeatSingleDelay     = Continuous timer: Wait some time and trigger once
TimerType_RepeatDoubleDelay     = Continuous timer: Wait some time and then trigger. Stay on for some time

TimerType_Explanation_WaitOnceTrigOnce      = Can be used to throw a turnout after some time
TimerType_Explanation_WaitOnceTrigUntilReset    = Useful for holding a light lit after some time, until reset
TimerType_Explanation_RepeatSingleDelay     = Useful for logging a message repeatedly at some interval
TimerType_Explanation_RepeatDoubleDelay     = Useful for turning a light on and off repeatedly at some interval

TriggerOnce_Short       = Trigger once
TriggerOnce_Long        = Trigger once

True_Short              = Always true
True_Long               = Always true

Turnout_Short           = Get turnout
Turnout_Long            = Turnout {0} {1} {2}
TurnoutOtherStatus      = Other
Turnout_TurnoutInUseTurnoutExpressionVeto   = Turnout is in use by Turnout expression "{0}"

Warrant_Short           = Warrant
Warrant_Long            = Warrant
WarrantTypeRouteFree    = Route free
WarrantTypeOccupied     = Route occupied
WarrantTypeAllocated    = Route allocated
WarrantTypeRouteSet     = Route set
WarrantTypeTrainRunning = Train is running
Warrant_WarrantInUseWarrantExpressionVeto   = Warrant is in use by Warrant expression "{0}"
